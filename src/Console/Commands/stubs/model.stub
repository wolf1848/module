<?php

namespace {{ namespace }};

use Illuminate\Database\Eloquent\Model;
use Wolf1848\Module\Traits\GetTableName;

class {{ class }} extends Model
{
    use GetTableName;
    protected $table = '{{ table }}';

    /**
    protected $dates = ['date']; //указывает поля для преобразования в Carbon

        Один ко многим
        public function HasMany(){
            return $this->hasMany(User::class, 'foreignKey', 'localKey');

         * обратная связь:
            return $this->belongTo(User::class, 'foreignKey', 'ownerKey');
        }

        Многие ко многим
        public function ManyToMany(){
            return $this->belongToMany(User::class, 'name_table', 'foreignKey', 'relatedKey');
        }

        полиморфное отношение
        public function users(){
            return $this->morphedByMany(Morph::class,'requestable','l_module_morph_to_table');
        }
        обратная связь
        public function requests(){
            return $this->morphToMany(Table::class, 'requestable','l_module_table_to_morph');
        }


        *виртуальное поле
        public function getFullNameAttribute(){
            return $this->last.' '.$this->first.' '.$this->second;
        }
    */

}
